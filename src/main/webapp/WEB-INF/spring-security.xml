<b:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-4.0.xsd">
   
   <http pattern="/favicon.ico" security="none" />
   <http auto-config="true" use-expressions="true">
       <intercept-url pattern="/createshift"  access="permitAll" />
       <intercept-url pattern="/logout"  access="permitAll" />
       <intercept-url pattern="/"  access="permitAll" />
       <intercept-url pattern="/asset/**" access="permitAll" />
       <intercept-url pattern="/vendor/**" access="permitAll" />
       <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

       <!-- access denied page -->
       <access-denied-handler error-page="/404" />
       <form-login login-page="/createshift" login-processing-url="/j_spring_security_check"
           default-target-url="/" authentication-failure-url="/login?error"
           username-parameter="username" password-parameter="password" />
       <logout logout-url="/logout" logout-success-url="/login?logout" />
       <!-- enable csrf protection -->
       <csrf />
   </http>
   

   <authentication-manager>
       <authentication-provider>
           <jdbc-user-service data-source-ref="pgDataSource"
               users-by-username-query="select
               username,password, true from ac_users where username=?" authorities-by-username-query="select
               username, 'ROLE_USER' as role from ac_users where username =?  " />
           
       </authentication-provider>
   </authentication-manager>

</b:beans>